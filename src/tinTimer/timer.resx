<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YZEplAAAAABJRU5ErkJggg==
</value>
  </data>
</root>